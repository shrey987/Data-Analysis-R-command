help()
2+2
mystring<-"hello"
print(mystring)
getwd()
data <- read.csv("C:\Users\Shrey\Documents\archive\Worldwide Vaccine Data.csv")
data <- read.csv("C:\Users\Shrey\Documents\archive\Data.csv")
data <- read.csv("C:/Users/Shrey/Documents/archive/Data.csv")
head(data)
data
tail(data)
head(data)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
head(data
---
```{r}
head(data
---
```{r}
head(data
---
```{r}
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
data<- read.csv("C:\\Users\\Shrey\\Documents\\archive\\Data.csv")
head(data)
tail(data)
head(data,10)
tail(data,10)
str(data)
names(data)
ls()
search()
search()
colnames(data)
rownames(data)
summary(data)
describe(data)
cor(data)
cor(data.Doses.administered.per.100.people)
cor(mydata.Doses.administered.per.100.people)
cor(mydata.Doses administeredper 100 people)
cor(mydata.Dosesadministeredper100people)
data[Total.doses.administered]
data[Total doses administered]
data[Totaldosesadministered]
mydata[Totaldosesadministered]
class(mydata)
summary(mydata)
class(data)
mydata<- read.csv("C:\\Users\\Shrey\\Documents\\archive\\Data.csv")
head(mydata)
colSums(is.na(mydata))
max(mydata$Country)
max(mydata$Total.doses.administered)
min(mydata$Total.doses.administered)
median(mydata$Total.doses.administered)
mean(mydata$Total.doses.administered)
mode(mydata$Total.doses.administered)
ls()
ls(mydata$Country pattern="L")
mydata$Country.ls( pattern="L")
mydata$Country
mydata$Country,mydata$X..of.population.fully.vaccinated
x<-data.frame(mydata$Country,mydata$X..of.population.fully.vaccinated)
x
sum(mydata$Doses.administered.per.100.people)
sort(mydata$X..of.population.fully.vaccinated)
sort(mydata[1,])
sort(mydata[1,])
order(mydata$Total.doses.administered)
rank(mydata$X..of.population.vaccinated)
dimnames(mydata)
predictor=c(rep('open',5),rep('closed',4))
predictor
length(mydata$Country)
xyz=with(mydata,order(mydata$Country,mydata$X..of.population.fully.vaccinated))
xyz
mydata.mat=as.matrix(mydata)
mydata.mat
frame.list=as.list(mydata)
frame.list
sd(mydata$X..of.population.vaccinated)
sd(mydata$X..of.population.vaccinated, na.rm=TRUE)
length(na.omit(mydata$X..of.population.fully.vaccinated))
log(mydata$Doses.administered.per.100.people)
rowMeans(mydata)
rowMeans(mydata$X..of.population.fully.vaccinated)
colMeans(mydata$X..of.population.fully.vaccinated)
colMeans(mydata)
colMeans(mydata.mat)
t(mydata)
rowMeans(mydata,dims=1)
rowMeans(mydata$X..of.population.fully.vaccinated,dims=1)
margin.table(mydata)
margin.table(mydata$Doses.administered.per.100.people)
prop.table(mydata$Total.doses.administered)
stem(mydata$Doses.administered.per.100.people)
data1.norm=rnorm(1000,mean(mydata),sd(mydata))
sample(mydata,size=5,replace=TRUE)
sample(mydata,size=5,replace=TRUE)
shapiro.test(mydata$X..of.population.vaccinated)
ks.test(mydata$Doses.administered.per.100.people,'pnorm',mean=100,sd=27)
wilcox.test(mydata$X..of.population.vaccinated,mydata$X..of.population.fully.vaccinated);
cor(mydata$Total.doses.administered,mydata)
cor(mydata$Total.doses.administered,mydata$X..of.population.vaccinated)
cov(mydata$X..of.population.vaccinated,mydata$Doses.administered.per.100.people)
cor.test(mydata$X..of.population.fully.vaccinated,mydata$X..of.population.vaccinated)
(mydata$Doses.administered.per.100.people.cov =cov(mydata$Doses.administered.per.100.people))
cov2cor(mydata$X..of.population.fully.vaccinated.cov)
cov2cor(mydata$X..of.population.fully.vaccinated)
cov2cor(mydata$X..of.population.fully.vaccinated . cov)
x.cs=chisq.test(mydata$X..of.population.vaccinated)
table(mydata$Doses.administered.per.100.people)
> boxplot(split(mydata$Country,mydata$Doses.administered.per.100.people),main=Literacy by Continent')
> boxplot<split(mydata$Country,mydata$Doses.administered.per.100.people),main=Literacy by Continent'>
boxplot(split(mydata$Country,mydata$Doses.administered.per.100.people),main=Doses for Country')
boxplot(split(mydata$Country,mydata$Doses.administered.per.100.people),main=Doses per Country')
boxplot(split(mydata$Country,mydata$Doses.administered.per.100.people),main='Doses per Country')
boxplot(split(mydata$Country,mydata$Doses.administered.per.100.people),main= Country)
boxplot(split(mydata$Country,mydata$Doses.administered.per.100.people))
boxplot(mydata$Doses.administered.per.100.people,mydata$Total.doses.administered,mydata$X..of.population.vaccinated,mydata$X..of.population.fully.vaccinated)
boxplot(mydata$Doses.administered.per.100.people)
plot(mydata$Country,mydata$Total.doses.administered)
plot(mydata$Doses.administered.per.100.people,mydata$Total.doses.administered)
plot(mydata$X..of.population.vaccinated,mydata$X..of.population.fully.vaccinated)
plot(mydata$X..of.population.vaccinated,type='l')
plot(mydata$X..of.population.vaccinated,type='l')
plot(mydata$X..of.population.vaccinated,type='p')
plot(mydata$X..of.population.vaccinated,type='b')
plot(mydata$X..of.population.vaccinated,type='o')
plot(mydata$X..of.population.vaccinated,type='c')
plot(mydata$X..of.population.vaccinated,type='n')
plot(mydata$X..of.population.fully.vaccinated,type='n')
plot(mydata$Total.doses.administered,type='n')
pie(mydata)
pie(mydata$X..of.population.vaccinated,labels=mydata)
pie(mydata[1,1])
pie(mydata[1,5])
pie(mydata$X..of.population.fully.vaccinated[1,5])
pie(mydata$X..of.population.fully.vaccinated[1,5,3])
pie(mydata[1,5,3])
pie(mydata[1,5,3])
pie(as.matrix(mydata[1,]),labels=names(mydata),col=pc)
pie(as.matrix(mydata[1,]),labels=names(mydata))
dotchart(mydata,labels=[1,2,3,4,5,6,7,8,9])
dotchart(mydata$X..of.population.vaccinated,labels=[1,2,3,4,5,6,7,8,9])
dotchart(mydata$X..of.population.vaccinated)
dotchart(mydata$X..of.population.vaccinated,color = 'gray30',gcolor='black',lcolor='gray30',bg='gray90')
barplot(mydata)
barplot(mydata$X..of.population.vaccinated)
barplot(mydata$X..of.population.fully.vaccinated)
barplot(mydata$X..of.population.fully.vaccinated,xlab='Fully vaccinated' , ylab='frequency')
barplot(mydata$X..of.population.fully.vaccinated,xlab='Fully vaccinated' , ylab='frequency')
barplot(mydata$X..of.population.fully.vaccinated,xlab='Fully vaccinated' , ylab='frequency',ylim=c(0,200),col='lightblue')
barplot(mydata$X..of.population.fully.vaccinated,xlab='Fully vaccinated' , ylab='frequency',ylim=c(0,100),col='lightblue')
barplot(mydata$X..of.population.fully.vaccinated,xlab='Fully vaccinated' , ylab='frequency',ylim=c(0,10),col='lightblue')
barplot(mydata$X..of.population.fully.vaccinated,xlab='Fully vaccinated' , ylab='frequency',ylim=c(0,100),col='lightblue')
barplot(as.matrix(mydata))
plot(mydata$Country,mydata$X..of.population.vaccinated)
plot(mydata$X..of.population.vaccinated)
levels(mydata$X..of.population.vaccinated)
levels(mydata)
interaction.plot(mydata$Doses.administered.per.100.people,mydata$X..of.population.vaccinated,mydata$X..of.population.fully.vaccinated,type='b')
stack(mydata)
unstack(mystack)
data1
data1=unstack(mystack)
mystack=stack(mydata)
mystack=stack(mydata)
mystack
data1=unstack(mystack)
data1
data1
na.omit(stack(mydata))
x=mydata$X..of.population.vaccinated
x=mydata$X..of.population.vaccinated
y=mydata$X..of.population.fully.vaccinated
x
cbind(x,y)
rbind(x,y)
matrix(x,col=2)
matrix(x,ncol=2)
matrix(x,ncol=5)
ggplot()
ggplot(mydata)
library(gcookbook)
library(gcookbook)
library(gcookbook)
help()
search()
head(mydata)
head(mydata)
head(mydata)
rowMeans(mydata,dims=1)
data1.norm=rnorm(1000,mean(mydata),sd(mydata))
(mydata$Doses.administered.per.100.people.cov =cov(mydata$Doses.administered.per.100.people))
tinytex::install_tinytex()
library(ggplot2)
library(ggplot)
Package.install("ggplot")
package.install("ggplot")
install.packages('ggplot2')
library(ggplot2)
ggplot(mydata,aes(x=X..of.population.fully.vaccinated,y=X..of.population.vaccinated))+geom_col()
ggplot(mydata,aes(x=X..of.population.fully.vaccinated,y=X..of.population.vaccinated))+geom_boxplot()
ggplot(mydata,aes(x=X..of.population.fully.vaccinated,y=X..of.population.vaccinated))+geom_point()
install.packages("scatterplot3d")
library(scatterplot3d)
attach(mydata)
scatterplot3d(mydata$Total.doses.administered,mydata$X..of.population.fully.vaccinated,main='scatterplot3d')
prop.table(mydata$X..of.population.vaccinated)
stripchart(mydata,vertical=TRUE)
install.packages('vioplot')
library(vioplot)
sdf=data.frame(mydata$X..of.population.fully.vaccinated,mydata$X..of.population.vaccinated)
vioplot(sdf)
history()
savehistory('/Desktop/shrey.Rhistory')
savehistory('/Desktop/eda.Rhistory')
savehistory('D:\\COLLEGE\\eda.Rhistory')
shapiro.test(mydata$X..of.population.vaccinated)
ggplot(mydata,aes(x=X..of.population.fully.vaccinated,y=X..of.population.vaccinated))+geom_col()
names(mydata)
names(mydata)
colnames(mydata)
colSums(is.na(mydata))
xyz
sort(mydata$X..of.population.vaccinated.1)
sort(mydata$X..of.population.vaccinated .1)
sort(mydata$Total.doses.administered .1)
mydata[3]
sort(mydata[1,])
sort(mydata[2,])
fac
fac=factor(mydata$Map)
fac
pie(mydata[1,5,3])
dotchart(mydata$X..of.population.vaccinated)
dotchart(mydata$X..of.population.vaccinated,color = 'gray30',gcolor='black',lcolor='gray30',bg='gray90')
quantile(mydata$X..of.population.vaccinated,0.2)
cumsum(mydata$X..of.population.fully.vaccinated)
cummax(mydata$X..of.population.fully.vaccinated)
cummin(mydata$Total.doses.administered)
cumprod(mydata$X..of.population.vaccinated)
seq(1,10,4)
lapply(mydata$X..of.population.fully.vaccinated,mean)
table(mydata)
fivenum(mydata$Total.doses.administered)
mydata%>%select(D2,D1)
map<-mydata$X..of.population.vaccinated
map
map
map
stripchart(mydata,vertical = TRUE)
library(tidyr)
library(tidyr)
plot(mydata$Total.doses.administered,type = "l")
plot(mydata$Total.doses.administered,type = "l")
lines(mydata$Total.doses.administered,type = "l",col="blue")
plot(mydata$X..of.population.vaccinated,type = "l")
lines(mydata$X..of.population.fully.vaccinated,type = "l",col="blue")
ggplot(df2,aes(x=X..of.population.vaccinated,y=Total,fill=X..of.population.fully.vaccinated))+geom_col()
ggplot(mydata,aes(x=X..of.population.vaccinated,y=Total,fill=X..of.population.fully.vaccinated))+geom_col()
ggplot(mydata,aes(x=X..of.population.vaccinated,y=X..of.population.fully.vaccinated,fill=X..of.population.fully.vaccinated))+geom_col()
hist(mydata$Doses.administered.per.100.people)
pie(mydata$Doses.administered.per.100.people,labels = "100 people")
mydata[rev(order(mydata$Doses.administered.per.100.people))]
mydata[rev(order(mydata$Country))]
savehistory('D:\\COLLEGE\\eda.Rhistory')
